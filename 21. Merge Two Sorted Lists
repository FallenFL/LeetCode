/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if (l2 == null) return l1;
        if (l1 == null) return l2;
        ListNode ansRoot = null;
        ListNode ans = null;
        if (l1.val < l2.val)
        {
           ansRoot = new ListNode(l1.val);
            l1 = l1.next;
            ans = ansRoot;
        }
        else
        {
            ansRoot = new ListNode(l2.val);
            l2 = l2.next;
            ans = ansRoot;
        }
        while (l1 != null || l2 != null)
        {
            if (l1 == null)
            {
                ansRoot.next = new ListNode(l2.val);
                ansRoot = ansRoot.next;
                l2 = l2.next;
            }
            else if (l2 == null || l1.val <= l2.val)
            {
                ansRoot.next = new ListNode(l1.val);
                ansRoot = ansRoot.next;
                l1 = l1.next;
            }
            else if (l2.val < l1.val)
            {
                ansRoot.next = new ListNode(l2.val);
                ansRoot = ansRoot.next;
                l2 = l2.next;
            }
            else
            {
                ansRoot.next = new ListNode(l1.val);
                ansRoot = ansRoot.next;
                l1 = l1.next;
            }
        }
        return ans;
    }
}
