class Solution {
    public int minimumTotal(List<List<Integer>> triangle) {
        int[] f = new int[triangle.size()+1];
        int n = triangle.size();
        if (n == 0) return 0;
        Arrays.fill(f,1000000);
        f[0] = triangle.get(0).get(0);
        if (n == 1) return f[0];
        int ans = Integer.MAX_VALUE;
        int[][] nums = new int[n+1][n+1];
         for (int i = 0; i < n; ++ i)
            for (int j = 0; j < n + 1; ++ j)
            {
                if (j > i)
                {
                    nums[i][j] = 1000000;
                }
                else
                {
                    nums[i][j] = triangle.get(i).get(j);
                }
            }
        int temp = 0;
        for (int i = 1; i < n; ++ i)
            for (int j = 0; j <= i; ++ j)
            {
                if (j == 0)
                {
                    temp = f[j];//f[i-1][j]
                    f[j] = f[j] + nums[i][j];             
                }
                else
                {
                    int shorter = temp;
                    temp = f[j];//f[i-1][j]
                    f[j] = Math.min(shorter,f[j]) + nums[i][j];
                }
                if (i == n - 1) ans = Math.min(ans,f[j]);
            }
        return ans;
    }
}
