class Solution {
    public int lengthOfLIS(int[] nums) {//nlonn
        if (nums.length == 0) return 0;
        int len = 0;
        int[] f = new int[nums.length + 1];
        for (int i = 0; i < nums.length; i++)
        {
            if (i == 0) 
            {
                f[1] = nums[0];
                len = 1;
            }
            else
            {
                if (f[len] < nums[i])
                {
                    len ++;
                    f[len] = nums[i];
                }
                else
                {
                    int index = find(nums[i], f , len);
                    f[index] = nums[i];
                }
            }
        }
        return len;
        
    }
    
    public int find(int num, int[] f, int len)//binary search
    {
        int left = 1;
        int right = len;
        int mid = (1 + len) / 2;
        while (left < right)
        {
            mid = left + (right - left) / 2;
            if (f[mid] < num) left = mid + 1;
            else right = mid;
        }
        return left;
    }
}
