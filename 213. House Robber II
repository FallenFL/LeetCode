class Solution {
    public int rob(int[] nums) {
        int ans = 0;
        int n = nums.length;
        if (n == 0) return 0;
        if (n == 1) return nums[0];
        if (n == 2) return Math.max(nums[0],nums[1]);
        int[] f = new int[n];
        f[0] = nums[0];
        f[1] = Math.max(nums[0],nums[1]);
        for (int i = 2; i < n - 1; ++ i)
        {
            f[i] = Math.max(nums[i] + f[i-2], f[i-1]);
        }
        ans = Math.max(ans,f[n-2]);
        Arrays.fill(f,0);
        f[1] = nums[1];
        f[2] = Math.max(nums[1],nums[2]);
        for (int i = 3; i < n; ++ i)
        {
            f[i] = Math.max(nums[i] + f[i-2], f[i-1]);
        }
        ans = Math.max(ans,f[n-1]);
        return ans;
    }
}
