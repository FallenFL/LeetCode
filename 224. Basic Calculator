class Solution {
    Stack<Integer> resStack = new Stack<Integer>();
    Stack<Integer> flagStack = new Stack<Integer>();
    public int calculate(String s) {
        
        int flag = 1;
        int res = 0;
        int num = 0;
        for (int i = 0; i < s.length(); ++i)
        {
            char c = s.charAt(i);
            if (c == '+')
            {
                flag = 1;
            }
            else if (c == '-')
            {
                flag = -1;
            }
            else if (c >= '0' && c <= '9')
            {
                while (s.charAt(i) >= '0' && s.charAt(i) <= '9')
                {
                    num = num * 10 + (s.charAt(i) - '0');
                    i++;
                    if (i >= s.length()) break;
                }
                i--;
                res += flag * num;

                num = 0;
            }
            else if (c == '(')
            {
                resStack.push(res);
                res = 0;
                flagStack.push(flag);
                flag = 1;
            }
            else if (c == ')')
            {
                res = resStack.pop() + flagStack.pop() * res;
                flag = 1;
            }
        }
        return res;
    }
}
