/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    int ans;
    public int longestUnivaluePath(TreeNode root) {
            helper(root);
            return ans;
    }
    public int helper(TreeNode root)
    {
        if (root == null) return 0;
        int right = 0;
        int left = 0;
        if (root.left != null){
        if (root.val == root.left.val)
        {
            left = helper(root.left);
            left ++;
        }
        else
        {
            left = helper(root.left);
            left = 0;
        }
        }
        if (root.right != null){
        if (root.val == root.right.val)
        {
            right = helper(root.right);
            right ++;
        }
        else 
        {
            right = helper(root.right);
            right = 0;
        }
        }
        ans = Math.max(ans, left + right);
        return (Math.max(right,left));
    }
}
